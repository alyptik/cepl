.TH CEPL: "1" "July 2024" "cepl-12\&.0\&.0" "User Commands"

.SH "NAME"
cepl \- a C and C++ REPL

.SH "SYNOPSIS"
.sp
.nf
\fIcepl\fR [\-hptvw] [\-c\fI<compiler>\fR] [\-e\fI<code to evaluate>\fR] [\-f\fI<file>\fR] [\-l\fI<library>\fR] [\-I\fI<include directory>\fR] [\-L\fI<library directory>\fR] [\-o\fI<out\&.c>\fR]
.fi

.SH "DESCRIPTION"
.sp
A readline C and C++ REPL with history, tab-completion, and undo.
.fi

.SH "USAGE"
.sp
The following environment variables are respected: \fBCFLAGS\fR, \fBLDFLAGS\fR,
\fBLDLIBS\fR, and \fBLIBS\fR.
.sp
Command history is read from and saved to \fI~/\&.cepl_history\fR\&.
.sp
To switch between C/C++ modes, specify your C or C++ compiler
with \fI-c\fR such as:
.sp
    \fIcepl -cg++ -lboost_filesystem -lboost_context -lboost_system\fR
.sp
to run in C++ mode linking against Boost and compiling with g++, or:
.sp
    \fIcepl -cclang -lelf\fR
.sp
to run in C mode linking against libelf and compiling with clang.
.fi

.SS "OPTIONS"
.sp
Command line options:
.fi

.HP
\fB\-c\fR, \fB\-\-compiler\fR	Specify alternate compiler
.HP
\fB\-e\fR, \fB\-\-eval\fR	Evaluate argument as C/C++ code
.HP
\fB\-f\fR, \fB\-\-file\fR	Source file to import
.HP
\fB\-h\fR, \fB\-\-help\fR	Show help/usage information
.HP
\fB\-o\fR, \fB\-\-output\fR	Name of the file to output C/C++ code to
.HP
\fB\-p\fR, \fB\-\-parse\fR	Disable addition of dynamic library symbols to readline completion
.HP
\fB\-s\fR, \fB\-\-std\fR		Specify which C/C++ standard to use
.HP
\fB\-t\fR, \fB\-\-tracking\fR	Toggle variable tracking
.HP
\fB\-v\fR, \fB\-\-version\fR	Show version information
.HP
\fB\-w\fR, \fB\-\-warnings\fR	Compile with \fB\-pedantic\fR \fB\-Wall\fR \fB\-Wextra\fR flags
.HP
\fB\-l\fR			Link against specified library (flag can be repeated)
.HP
\fB\-I\fR			Search directory for header files (flag can be repeated)
.HP
\fB\-L\fR			Search directory for libraries (flag can be repeated)
.fi

.SS "COMMANDS"
.sp
Lines prefixed with a \fB;\fR are interpreted as commands (\fB[]\fR text is optional)\&.
.fi

.HP
\fB;h[elp]\fR		Show help
.HP
\fB;m[acro]\fR		Define a macro/function (e\&.g\&. \fB;f void bork(void) { puts("wark"); }\fR)
.HP
\fB;o[utput]\fR	Toggle -o (output C source code) flag
.HP
\fB;p[arse]\fR		Toggle -p (shared library parsing) flag
.HP
\fB;q[uit]\fR		Exit CEPL
.HP
\fB;r[eset]\fR		Reset CEPL to its initial program state
.HP
\fB;t[racking]\fR	Toggle variable tracking
.HP
\fB;u[ndo]\fR		Incremental undo (can be repeated)
.HP
\fB;w[arnings]\fR	Toggle -w (pedantic warnings) flag
.fi

.SH "NOTES"
.sp
Please direct any bug/issue reports, as well as any feature requests, to <\fIhttps://github\&.com/alyptik/cepl\fR>
.fi

.SH "AUTHORS"
.ie n \{\
 \h'-04'\(bu\h'+03'\c \&.\}
.el \{\
.sp -1
.IP \(bu 2\&.3
.\}
Joey Pabalinas <\fIjoeypabalinas@gmail.com\&\&.com\fR>
.fi
